{"version":3,"sources":["App.js","index.js"],"names":["emojiDictionary","emojisWeKnow","Object","keys","App","useState","meaning","setMeaning","className","onChange","event","userInput","target","value","undefined","placeholder","style","padding","minWidth","map","emoji","fontSize","cursor","onClick","console","log","emojiClickHandler","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sJAGIA,EAAkB,CACpB,eAAM,sBACN,eAAM,MACN,eAAM,OACN,eAAM,eACN,eAAM,aACN,eAAM,uBACN,eAAM,yBACN,eAAM,iBACN,eAAM,iBACN,eAAM,0BAGJC,EAAeC,OAAOC,KAAKH,GAEhB,SAASI,IACtB,IAAI,EAAwBC,mBAAS,IAArC,mBAAKC,EAAL,KAAcC,EAAd,KAmBA,OACE,sBAAKC,UAAU,MAAf,UACE,iEAEA,uBACEC,SAfN,SAA2BC,GACzB,IAAIC,EAAYD,EAAME,OAAOC,MAEzBP,EAAUN,EAAgBW,QACdG,IAAZR,IACFA,EAAU,oCAEZC,EAAWD,IASPS,YAAa,wCACbC,MAAO,CACLC,QAAS,OACTC,SAAU,SAId,8BACE,+BAAKZ,EAAL,SAGF,gDACCL,EAAakB,KAAI,SAAUC,GAC1B,OACE,sBACEJ,MAAO,CAAEK,SAAU,OAAQJ,QAAS,SAAUK,OAAQ,WAEtDC,QAAS,kBAxCnB,SAA2BH,GAEzBb,EADcP,EAAgBoB,IAG9BI,QAAQC,IAAI,SAoCWC,CAAkBN,IAHnC,SAKGA,GAHIA,SCvDjB,IAAMO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC3B,EAAD,MAEFuB,I","file":"static/js/main.b03fb324.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nvar emojiDictionary = {\n  \"ü•∫\": \"Begging sorry shame\",\n  \"üòü\": \"Sad\",\n  \"ü§•\": \"Liar\",\n  \"üòí\": \"Dissatisfied\",\n  \"üò°\": \"Angry Face\",\n  \"üòë\": \" Expressionless Face\",\n  \"üò±\": \"Face Screaming in Fear\",\n  \"üòß\": \"Anguished Face\",\n  \"ü§Ø\": \"Exploding Head\",\n  \"ü§ï\": \"Face with Head-Bandage\"\n};\n\nvar emojisWeKnow = Object.keys(emojiDictionary);\n\nexport default function App() {\n  var [meaning, setMeaning] = useState(\"\");\n\n  function emojiClickHandler(emoji) {\n    var meaning = emojiDictionary[emoji];\n    setMeaning(meaning);\n\n    console.log(\"emoji\");\n  }\n\n  function emojiInputHandler(event) {\n    var userInput = event.target.value;\n\n    var meaning = emojiDictionary[userInput];\n    if (meaning === undefined) {\n      meaning = \"failure to recognise this emoji \";\n    }\n    setMeaning(meaning);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1> EMOJI ‡§Ö‡§∞‡•ç‡§•</h1>\n\n      <input\n        onChange={emojiInputHandler}\n        placeholder={\"put an emoji here to know the meaning\"}\n        style={{\n          padding: \"1rem\",\n          minWidth: \"80%\"\n        }}\n      />\n\n      <div>\n        <h1>{meaning} </h1>\n      </div>\n\n      <h2>emojis we know</h2>\n      {emojisWeKnow.map(function (emoji) {\n        return (\n          <span\n            style={{ fontSize: \"2rem\", padding: \"0.5rem\", cursor: \"pointer\" }}\n            key={emoji}\n            onClick={() => emojiClickHandler(emoji)}\n          >\n            {emoji}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}